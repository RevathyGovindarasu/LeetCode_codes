/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private int[] path = new int[5000];
    
    List<List<Integer>> result = new ArrayList<List<Integer>>();
    
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        helper(0,root,targetSum);
        return result;
    }
    
    private void helper(int index,TreeNode root, int sum)
    {
        if(root==null)
            return;
        
        path[index] = root.val;
        if(root.left==null && root.right==null && root.val==sum)
        {
            List<Integer> list = new ArrayList<>();
            for(int i=0;i<=index;i++)
            {
                list.add(path[i]);
            }
            result.add(list);
            return;
        }
         helper(index+1,root.left,sum-root.val);
        helper(index+1,root.right,sum-root.val);
    }
}
